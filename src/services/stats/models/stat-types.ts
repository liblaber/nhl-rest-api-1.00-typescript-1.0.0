// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import { statTypesDisplayName } from './stat-types-display-name';

/**
 * The shape of the model inside the application code - what the users use
 */
export const statTypes = z.object({
  displayName: statTypesDisplayName.optional(),
});

/**
 *
 * @typedef  {StatTypes} statTypes
 * @property {StatTypesDisplayName}
 */
export type StatTypes = z.infer<typeof statTypes>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const statTypesResponse = z
  .object({
    displayName: statTypesDisplayName.optional(),
  })
  .transform((data) => ({
    displayName: data['displayName'],
  }));

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const statTypesRequest = z.object({ displayName: statTypesDisplayName.nullish() }).transform((data) => ({
  displayName: data['displayName'],
}));
