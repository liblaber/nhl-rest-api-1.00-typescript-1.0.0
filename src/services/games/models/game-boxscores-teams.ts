// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import { gameBoxscoreTeam, gameBoxscoreTeamRequest, gameBoxscoreTeamResponse } from '../../common/game-boxscore-team';

/**
 * The shape of the model inside the application code - what the users use
 */
export const gameBoxscoresTeams = z.object({
  away: gameBoxscoreTeam.optional(),
  home: gameBoxscoreTeam.optional(),
});

/**
 *
 * @typedef  {GameBoxscoresTeams} gameBoxscoresTeams
 * @property {GameBoxscoreTeam}
 * @property {GameBoxscoreTeam}
 */
export type GameBoxscoresTeams = z.infer<typeof gameBoxscoresTeams>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const gameBoxscoresTeamsResponse = z
  .object({
    away: gameBoxscoreTeamResponse.optional(),
    home: gameBoxscoreTeamResponse.optional(),
  })
  .transform((data) => ({
    away: data['away'],
    home: data['home'],
  }));

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const gameBoxscoresTeamsRequest = z
  .object({ away: gameBoxscoreTeamRequest.nullish(), home: gameBoxscoreTeamRequest.nullish() })
  .transform((data) => ({
    away: data['away'],
    home: data['home'],
  }));
