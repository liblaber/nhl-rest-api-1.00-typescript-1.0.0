// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import { gameHighlights, gameHighlightsRequest, gameHighlightsResponse } from '../../common/game-highlights';

/**
 * The shape of the model inside the application code - what the users use
 */
export const highlights = z.object({
  scoreboard: gameHighlights.optional(),
  gameCenter: gameHighlights.optional(),
});

/**
 *
 * @typedef  {Highlights} highlights
 * @property {GameHighlights}
 * @property {GameHighlights}
 */
export type Highlights = z.infer<typeof highlights>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const highlightsResponse = z
  .object({
    scoreboard: gameHighlightsResponse.optional(),
    gameCenter: gameHighlightsResponse.optional(),
  })
  .transform((data) => ({
    scoreboard: data['scoreboard'],
    gameCenter: data['gameCenter'],
  }));

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const highlightsRequest = z
  .object({ scoreboard: gameHighlightsRequest.nullish(), gameCenter: gameHighlightsRequest.nullish() })
  .transform((data) => ({
    scoreboard: data['scoreboard'],
    gameCenter: data['gameCenter'],
  }));
