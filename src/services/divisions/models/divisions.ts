// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import { division, divisionRequest, divisionResponse } from '../../common/division';

/**
 * The shape of the model inside the application code - what the users use
 */
export const divisions = z.object({
  copyright: z.string().optional(),
  teams: z.array(division).optional(),
});

/**
 *
 * @typedef  {Divisions} divisions
 * @property {string}
 * @property {Division[]}
 */
export type Divisions = z.infer<typeof divisions>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const divisionsResponse = z
  .object({
    copyright: z.string().optional(),
    teams: z.array(divisionResponse).optional(),
  })
  .transform((data) => ({
    copyright: data['copyright'],
    teams: data['teams'],
  }));

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const divisionsRequest = z
  .object({ copyright: z.string().nullish(), teams: z.array(divisionRequest).nullish() })
  .transform((data) => ({
    copyright: data['copyright'],
    teams: data['teams'],
  }));
