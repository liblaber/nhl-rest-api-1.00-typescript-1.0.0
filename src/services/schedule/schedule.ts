// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import { BaseService } from '../base-service';
import { ContentType, HttpResponse } from '../../http';
import { RequestConfig } from '../../http/types';

export class ScheduleService extends BaseService {
  /**
   * Retrieve the next game for a specific team.
   * @param {string} team - Three-letter team code
   * @returns {Promise<HttpResponse<any>>} Successful response
   */
  async getTeamNextGame(team: string, requestConfig?: RequestConfig): Promise<HttpResponse<any>> {
    const path = this.client.buildPath('/v1/schedule/{team}/next', { team: team });
    const options: any = {
      responseSchema: z.any(),
      requestSchema: z.any(),
      headers: {},
      requestContentType: ContentType.Json,
      responseContentType: ContentType.Json,
      retry: requestConfig?.retry,
    };
    return this.client.get(path, options);
  }

  /**
   * Retrieve the schedule for a specific team and season.
   * @param {string} team - Three-letter team code
   * @param {number} season - Season in YYYYYYYY format
   * @returns {Promise<HttpResponse<any>>} Successful response
   */
  async getTeamScheduleBySeason(
    team: string,
    season: number,
    requestConfig?: RequestConfig,
  ): Promise<HttpResponse<any>> {
    const path = this.client.buildPath('/v1/schedule/{team}/{season}', { team: team, season: season });
    const options: any = {
      responseSchema: z.any(),
      requestSchema: z.any(),
      headers: {},
      requestContentType: ContentType.Json,
      responseContentType: ContentType.Json,
      retry: requestConfig?.retry,
    };
    return this.client.get(path, options);
  }

  /**
   * Retrieve the statistics for a specific game.
   * @param {number} season - Season in YYYYYYYY format
   * @param {string} team - Three-letter team code
   * @param {number} game - Game ID
   * @returns {Promise<HttpResponse<any>>} Successful response
   */
  async getGameStats(
    season: number,
    team: string,
    game: number,
    requestConfig?: RequestConfig,
  ): Promise<HttpResponse<any>> {
    const path = this.client.buildPath('/v1/schedule/{season}/team/{team}/game/{game}', {
      season: season,
      team: team,
      game: game,
    });
    const options: any = {
      responseSchema: z.any(),
      requestSchema: z.any(),
      headers: {},
      requestContentType: ContentType.Json,
      responseContentType: ContentType.Json,
      retry: requestConfig?.retry,
    };
    return this.client.get(path, options);
  }
}
