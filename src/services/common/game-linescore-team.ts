// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import {
  gameLinescoreTeamTeam,
  gameLinescoreTeamTeamRequest,
  gameLinescoreTeamTeamResponse,
} from './game-linescore-team-team';

/**
 * The shape of the model inside the application code - what the users use
 */
export const gameLinescoreTeam = z.object({
  team1: gameLinescoreTeamTeam.optional(),
  goals1: z.number().optional(),
  shotsOnGoal: z.number().optional(),
  goaliePulled: z.boolean().optional(),
  numSkaters: z.number().optional(),
  powerPlay: z.boolean().optional(),
});

/**
 *
 * @typedef  {GameLinescoreTeam} gameLinescoreTeam
 * @property {GameLinescoreTeamTeam}
 * @property {number}
 * @property {number}
 * @property {boolean}
 * @property {number}
 * @property {boolean}
 */
export type GameLinescoreTeam = z.infer<typeof gameLinescoreTeam>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const gameLinescoreTeamResponse = z
  .object({
    team: gameLinescoreTeamTeamResponse.optional(),
    goals: z.number().optional(),
    shotsOnGoal: z.number().optional(),
    goaliePulled: z.boolean().optional(),
    numSkaters: z.number().optional(),
    powerPlay: z.boolean().optional(),
  })
  .transform((data) => ({
    team1: data['team'],
    goals1: data['goals'],
    shotsOnGoal: data['shotsOnGoal'],
    goaliePulled: data['goaliePulled'],
    numSkaters: data['numSkaters'],
    powerPlay: data['powerPlay'],
  }));

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const gameLinescoreTeamRequest = z
  .object({
    team1: gameLinescoreTeamTeamRequest.nullish(),
    goals1: z.number().nullish(),
    shotsOnGoal: z.number().nullish(),
    goaliePulled: z.boolean().nullish(),
    numSkaters: z.number().nullish(),
    powerPlay: z.boolean().nullish(),
  })
  .transform((data) => ({
    team: data['team1'],
    goals: data['goals1'],
    shotsOnGoal: data['shotsOnGoal'],
    goaliePulled: data['goaliePulled'],
    numSkaters: data['numSkaters'],
    powerPlay: data['powerPlay'],
  }));
