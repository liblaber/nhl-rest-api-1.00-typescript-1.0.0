// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import { gameLinescoreTeam, gameLinescoreTeamRequest, gameLinescoreTeamResponse } from './game-linescore-team';

/**
 * The shape of the model inside the application code - what the users use
 */
export const gameLinescoreTeams = z.object({
  home: gameLinescoreTeam.optional(),
  away: gameLinescoreTeam.optional(),
});

/**
 *
 * @typedef  {GameLinescoreTeams} gameLinescoreTeams
 * @property {GameLinescoreTeam}
 * @property {GameLinescoreTeam}
 */
export type GameLinescoreTeams = z.infer<typeof gameLinescoreTeams>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const gameLinescoreTeamsResponse = z
  .object({
    home: gameLinescoreTeamResponse.optional(),
    away: gameLinescoreTeamResponse.optional(),
  })
  .transform((data) => ({
    home: data['home'],
    away: data['away'],
  }));

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const gameLinescoreTeamsRequest = z
  .object({ home: gameLinescoreTeamRequest.nullish(), away: gameLinescoreTeamRequest.nullish() })
  .transform((data) => ({
    home: data['home'],
    away: data['away'],
  }));
