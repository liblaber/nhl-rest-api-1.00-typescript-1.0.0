// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import { picksTeam, picksTeamRequest, picksTeamResponse } from './picks-team';
import { prospect, prospectRequest, prospectResponse } from './prospect';

/**
 * The shape of the model inside the application code - what the users use
 */
export const picks = z.object({
  year: z.number().optional(),
  round: z.string().optional(),
  pickOverall: z.number().optional(),
  pickInRound: z.number().optional(),
  team: picksTeam.optional(),
  prospect: prospect.optional(),
});

/**
 *
 * @typedef  {Picks} picks
 * @property {number}
 * @property {string}
 * @property {number}
 * @property {number}
 * @property {PicksTeam}
 * @property {Prospect}
 */
export type Picks = z.infer<typeof picks>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const picksResponse = z
  .object({
    year: z.number().optional(),
    round: z.string().optional(),
    pickOverall: z.number().optional(),
    pickInRound: z.number().optional(),
    team: picksTeamResponse.optional(),
    prospect: prospectResponse.optional(),
  })
  .transform((data) => ({
    year: data['year'],
    round: data['round'],
    pickOverall: data['pickOverall'],
    pickInRound: data['pickInRound'],
    team: data['team'],
    prospect: data['prospect'],
  }));

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const picksRequest = z
  .object({
    year: z.number().nullish(),
    round: z.string().nullish(),
    pickOverall: z.number().nullish(),
    pickInRound: z.number().nullish(),
    team: picksTeamRequest.nullish(),
    prospect: prospectRequest.nullish(),
  })
  .transform((data) => ({
    year: data['year'],
    round: data['round'],
    pickOverall: data['pickOverall'],
    pickInRound: data['pickInRound'],
    team: data['team'],
    prospect: data['prospect'],
  }));
