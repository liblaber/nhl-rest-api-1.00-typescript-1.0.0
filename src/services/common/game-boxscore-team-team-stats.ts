// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import { teamSkaterStats, teamSkaterStatsRequest, teamSkaterStatsResponse } from './team-skater-stats';

/**
 * The shape of the model inside the application code - what the users use
 */
export const gameBoxscoreTeamTeamStats = z.object({
  teamSkaterStats: teamSkaterStats.optional(),
});

/**
 *
 * @typedef  {GameBoxscoreTeamTeamStats} gameBoxscoreTeamTeamStats
 * @property {TeamSkaterStats}
 */
export type GameBoxscoreTeamTeamStats = z.infer<typeof gameBoxscoreTeamTeamStats>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const gameBoxscoreTeamTeamStatsResponse = z
  .object({
    teamSkaterStats: teamSkaterStatsResponse.optional(),
  })
  .transform((data) => ({
    teamSkaterStats: data['teamSkaterStats'],
  }));

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const gameBoxscoreTeamTeamStatsRequest = z
  .object({ teamSkaterStats: teamSkaterStatsRequest.nullish() })
  .transform((data) => ({
    teamSkaterStats: data['teamSkaterStats'],
  }));
