// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';

/**
 * The shape of the model inside the application code - what the users use
 */
export const shootoutInfoHome = z.object({
  scores: z.number().optional(),
  attempts: z.number().optional(),
});

/**
 *
 * @typedef  {ShootoutInfoHome} shootoutInfoHome
 * @property {number}
 * @property {number}
 */
export type ShootoutInfoHome = z.infer<typeof shootoutInfoHome>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const shootoutInfoHomeResponse = z
  .object({
    scores: z.number().optional(),
    attempts: z.number().optional(),
  })
  .transform((data) => ({
    scores: data['scores'],
    attempts: data['attempts'],
  }));

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const shootoutInfoHomeRequest = z
  .object({ scores: z.number().nullish(), attempts: z.number().nullish() })
  .transform((data) => ({
    scores: data['scores'],
    attempts: data['attempts'],
  }));
