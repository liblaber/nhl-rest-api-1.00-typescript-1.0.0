// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';

/**
 * The shape of the model inside the application code - what the users use
 */
export const coachesPerson = z.object({
  fullName: z.string().optional(),
  link: z.string().optional(),
});

/**
 *
 * @typedef  {CoachesPerson} coachesPerson
 * @property {string}
 * @property {string}
 */
export type CoachesPerson = z.infer<typeof coachesPerson>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const coachesPersonResponse = z
  .object({
    fullName: z.string().optional(),
    link: z.string().optional(),
  })
  .transform((data) => ({
    fullName: data['fullName'],
    link: data['link'],
  }));

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const coachesPersonRequest = z
  .object({ fullName: z.string().nullish(), link: z.string().nullish() })
  .transform((data) => ({
    fullName: data['fullName'],
    link: data['link'],
  }));
