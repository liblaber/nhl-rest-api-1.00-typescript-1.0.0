// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import { gamePlay, gamePlayRequest, gamePlayResponse } from './game-play';
import { playsByPeriod, playsByPeriodRequest, playsByPeriodResponse } from './plays-by-period';

/**
 * The shape of the model inside the application code - what the users use
 */
export const plays = z.object({
  allPlays: z.array(gamePlay).optional(),
  scoringPlays: z.array(z.number()).optional(),
  penaltyPlays: z.array(z.number()).optional(),
  playsByPeriod: z.array(playsByPeriod).optional(),
  currentPlay: gamePlay.optional(),
});

/**
 *
 * @typedef  {Plays} plays
 * @property {GamePlay[]}
 * @property {number[]}
 * @property {number[]}
 * @property {PlaysByPeriod[]}
 * @property {GamePlay}
 */
export type Plays = z.infer<typeof plays>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const playsResponse = z
  .object({
    allPlays: z.array(gamePlayResponse).optional(),
    scoringPlays: z.array(z.number()).optional(),
    penaltyPlays: z.array(z.number()).optional(),
    playsByPeriod: z.array(playsByPeriodResponse).optional(),
    currentPlay: gamePlayResponse.optional(),
  })
  .transform((data) => ({
    allPlays: data['allPlays'],
    scoringPlays: data['scoringPlays'],
    penaltyPlays: data['penaltyPlays'],
    playsByPeriod: data['playsByPeriod'],
    currentPlay: data['currentPlay'],
  }));

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const playsRequest = z
  .object({
    allPlays: z.array(gamePlayRequest).nullish(),
    scoringPlays: z.array(z.number()).nullish(),
    penaltyPlays: z.array(z.number()).nullish(),
    playsByPeriod: z.array(playsByPeriodRequest).nullish(),
    currentPlay: gamePlayRequest.nullish(),
  })
  .transform((data) => ({
    allPlays: data['allPlays'],
    scoringPlays: data['scoringPlays'],
    penaltyPlays: data['penaltyPlays'],
    playsByPeriod: data['playsByPeriod'],
    currentPlay: data['currentPlay'],
  }));
